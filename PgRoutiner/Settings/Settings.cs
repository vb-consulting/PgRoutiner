using System;
using System.Collections;
using System.Collections.Generic;
using Newtonsoft.Json;

namespace PgRoutiner
{
    public partial class Settings
    {
        [JsonIgnore] public string Project { get; set; }
        [JsonIgnore] public bool Run { get; set; } = false;

        /*general*/
        public string Connection { get; set; } = null;
        public string Schema { get; set; } = null;
        public bool Overwrite { get; set; } = false;
        public bool AskOverwrite { get; set; } = false;
        public IList<string> SkipIfExists { get; set; } = new List<string>();
        public string MinNormVersion { get; set; } = "3.1.2";
        public bool UpdateReferences { get; set; } = true;
        public int Ident { get; set; } = 4;
        public string PgDumpCommand { get; set; } = "pg_dump";

        /*routines data-access extensions*/
        public string OutputDir { get; set; } = null;
        public string Namespace { get; set; } = null;
        public string NotSimilarTo { get; set; } = null;
        public string SimilarTo { get; set; } = null;
        public string SourceHeader { get; set; } = "// <auto-generated />";
        public bool SyncMethod { get; set; } = true;
        public bool AsyncMethod { get; set; } = true;
        public string ModelDir { get; set; } = null;
        public IDictionary<string, string> Mapping { get; set; } = new Dictionary<string, string>();
        public IDictionary<string, string> CustomModels { get; set; } = new Dictionary<string, string>();
        public bool UseRecords { get; set; } = true;

        /*schema dump*/
        public string SchemaDumpFile { get; set; } = null;
        public bool SchemaDumpNoOwner { get; set; } = true;
        public bool SchemaDumpNoPrivileges { get; set; } = true;
        public bool SchemaDumpDropIfExists { get; set; } = true;
        public string SchemaDumpAdditionalOptions { get; set; } = null;
        public bool SchemaDumpUnderTransaction { get; set; } = true;

        /*data dump*/
        public string DataDumpFile { get; set; } = null;
        public IList<string> DataDumpTables { get; set; } = new List<string>();
        public string DataDumpAdditionalOptions { get; set; } = null;
        public bool DataDumpUnderTransaction { get; set; } = true;

        /*object tree*/
        public string DbObjectsDir { get; set; } = null;
        public bool DbObjectsDirClearIfNotEmpty { get; set; } = true;
        public bool DbObjectsNoOwner { get; set; } = true;
        public bool DbObjectsNoPrivileges { get; set; } = true;
        public bool DbObjectsDropIfExists { get; set; } = false;
        public bool DbObjectsCreateOrReplaceRoutines { get; set; } = true;
        public bool DbObjectsRaw { get; set; } = false;

        /*comments markdown file*/
        public string CommentsMdFile { get; set; } = null;
        public bool CommentsMdRoutines { get; set; } = true;
        public bool CommentsMdViews { get; set; } = true;
        public string CommentsMdNotSimilarTo { get; set; } = null;
        public string CommentsMdSimilarTo { get; set; } = null;

        public static Settings Value { get; set; } = new Settings();
    }
}
